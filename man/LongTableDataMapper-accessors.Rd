% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/LongTableDataMapper-class.R
\name{LongTableDataMapper-accessors}
\alias{LongTableDataMapper-accessors}
\alias{rawdata,LongTableDataMapper-method}
\alias{rawdata}
\alias{rowDataMap,LongTableDataMapper-method}
\alias{rowDataMap}
\alias{rowDataMap<-,LongTableDataMapper,list_or_List-method}
\alias{colDataMap,LongTableDataMapper-method}
\alias{colDataMap}
\alias{colDataMap<-,LongTableDataMapper,list_or_List-method}
\alias{assayMap,LongTableDataMapper-method}
\alias{assayMap,LongTableDataMapper,list-method}
\alias{assayMap,LongTableDataMapper,List-method}
\alias{assayMap}
\alias{assayMap<-,LongTableDataMapper,list_or_List-method}
\alias{assayMap<-,LongTableDataMapper,list-method}
\alias{assayMap<-,LongTableDataMapper,List-methhod}
\alias{assayMap<-}
\alias{metadataMap,LongTableDataMapper-method}
\alias{metadataMap}
\alias{metadataMap<-,LongTableDataMapper,list_or_List-method}
\title{Accessing and modifying data in a \code{LongTableDataMapper} object.}
\usage{
\S4method{rowDataMap}{LongTableDataMapper}(object)

\S4method{rowDataMap}{LongTableDataMapper,list_or_List}(object) <- value

\S4method{colDataMap}{LongTableDataMapper}(object)

\S4method{colDataMap}{LongTableDataMapper,list_or_List}(object) <- value

\S4method{assayMap}{LongTableDataMapper}(object)

\S4method{assayMap}{LongTableDataMapper,list_or_List}(object) <- value

\S4method{metadataMap}{LongTableDataMapper}(object)

\S4method{metadataMap}{LongTableDataMapper,list_or_List}(object) <- value
}
\arguments{
\item{object}{A \code{LongTableDataMapper} object to get or set data from.}

\item{value}{See details.}

\item{...}{See details.}
}
\value{
Accessors: See details

Setters: An update \code{LongTableDataMapper} object, returned invisibly.
}
\description{
Documentation for the various setters and getters which allow manipulation
of data in the slots of a \code{LongTableDataMapper} object.

@examples
rowDataMap(exampleDataMapper) <- list(c('drug_id'), c())

@examples
colDataMap(exampleDataMapper) <- list(c('cell_id'), c())

@examples
metadataMap(exampleDataMapper)
}
\details{
\strong{rawdata}: Get the raw data slot from a \code{LongTableDataMapper} object. Returns
a list-like containing one or more raw data inputs to the
\code{LongTableDataMapper} object.

\strong{rowDataMap}: \code{list} of two \code{character} vectors, the first are the
columns required to uniquely identify each row of a \code{LongTableDataMapper} and the
second any additional row-level metadata. If the character vectors
have names, the resulting columns are automatically renamed to the
item name of the specified column.

@md
@aliases rowDataMap<-,LongTableDataMapper,list-method rowDataMap<-LongTableDataMapper,List-method
rowDataMap<-
@exportMethod rowDataMap<-

\strong{colDataMap}: \code{list} of two \code{character} vectors, the first are the
columns required to uniquely identify each row of a \code{LongTableDataMapper} and the
second any additional col-level metadata. If the character vectors
have names, the resulting columns are automatically renamed to the
item name of the specified column.

@md
@aliases rowDataMap<-,LongTableDataMapper,list-method colDataMap<-LongTableDataMapper,List-method
colDataMap<-
@exportMethod colDataMap<-

\strong{assayMap}:  A \code{list} of character vectors. The name of each list item
will be the assay in a \code{LongTableDataMapper} object that the columns in the
\code{character} vector will be assigned to. Column renaming occurs automatically
when the character vectors have names (from the value to the name).

\strong{assayMap<-}: Updates the \verb{@assaMap} slot of a \code{LongTableDataMapper} object,
returning an invisible NULL. Arguments:
\itemize{
\item value:  A \code{list} of character vectors, where the name of each list
item is the name of an assay and the values of each character vector
specify the columns mapping to the assay in the \code{S4} object the
\code{LongTableDataMapper} constructs.
}

\strong{metadataMap}:  A \code{list} of \code{character} vectors. Each item is an element
of the constructed objects \verb{@metadata} slot.

@md
@aliases metadataMap,LongTableDataMapper-method metadataMap
@exportMethod metadataMap
}
\examples{
rowDataMap(exampleDataMapper)

colDataMap(exampleDataMapper)

assayMap(exampleDataMapper)

assayMap(exampleDataMapper) <- list(sensitivity=c(viability1='vaibility'))

metadataMap(exampleDataMapper)

}
\seealso{
Other DataMapper-acessors: 
\code{\link{DataMapper-accessors}}
}
\concept{DataMapper-acessors}
