% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/immutable-class.R
\name{immutable}
\alias{immutable}
\title{Constructor for "immutable" S3-class property}
\usage{
immutable(object)
}
\arguments{
\item{object}{Any R object}
}
\value{
The \code{object} with "immutable" prepended to its class attribute.
}
\description{
This method should allow any S3 object in R to become immutable by
intercepting \verb{[<-}, \verb{[[<-}, \verb{$<-} and \code{c} during S3-method dispatch and
returning an error. Also intercepts \code{cbind} and \code{rbind}.

Reverse with call to the \code{mutable} function.
}
\details{
The motivation for this class was to create pseudo-private slots in an R
S4 object by preventing mutation of those slots outside of the accessors
written for the class. It should behave as expected for R object which
operate with 'copy-on-modify' semantics, including most base R functions and
S3 objects.

An environment was not suitable for this case due
to the copy-by-reference semantics, such that normal R assignment, which
users assume makes a copy of the object, actually references the same
environment in both the original and copy of the object.

WARNING: This method has only been tested with \code{list} and \code{data.frame}.
Developers should check that it behaves as expected for your class of
interest. It is likely this will not work for \code{S4} object or objects which
have modify by reference semantics such as a \code{data.table} or \code{environment}.
}
\examples{
immutable_list <- immutable(as.list(1:5))
class(immutable_list)
# errors during assignment operations
tryCatch({ immutable_list$new <- 1 }, error=print)

}
